{
  "name": "Blather",
  "tagline": "Speach interface made by Jezra.",
  "body": "# Blather\r\n\r\nBlather is a speech recognizer that will run commands when a user speaks preset sentences.\r\n\r\n## Requirements\r\n\r\n(0.) Download and run Blather-Installer (it will install dependencies and clone this git and set up configuration)\r\n1. pocketsphinx\r\n2. gstreamer-0.10 (and what ever plugin has pocket sphinx support)\r\n3. gstreamer-0.10 base plugins (required for alsa)\r\n4. pyside (only required for the Qt based UI)\r\n5. pygtk (only required for the Gtk based UI)\r\n6. pyyaml (only required for reading the options file)  \r\n\r\n**Note:** it may also be required to install `pocketsphinx-hmm-en-hub4wsj`\r\n\r\n\r\n## Usage\r\n\r\n0. move commands.tmp to ~/.config/blather/commands.conf and fill the file with sentences and command to run\r\n1. Run Blather.py, this will generate ~/.config/blather/sentences.corpus based on sentences in the 'commands' file\r\n2. quit blather (there is a good chance it will just segfault)\r\n3. go to <http://www.speech.cs.cmu.edu/tools/lmtool.html> and upload the sentences.corpus file\r\n4. download the resulting XXXX.lm file to the ~/.config/blather/language directory and rename to file to 'lm'\r\n5. download the resulting XXXX.dic file to the ~/.config/blather/language directory and rename to file to 'dic'\r\n6. run Blather.py\r\n    * for Qt GUI, run Blather.py -i q\r\n    * for Gtk GUI, run Blather.py -i g\r\n    * to start a UI in 'continuous' listen mode, use the -c flag\r\n    * to use a microphone other than the system default, use the -m flag\r\n7. start talking\r\n\r\n**Note:** to start Blather without needing to enter command line options all the time, copy options.yaml.tmp to ~/.config/blather/options.yaml and edit accordingly.\r\n\r\n### Bonus\r\n\r\nonce the sentences.corpus file has been created, run the language_updater.sh script to automate the process of creating and downloading language files.\r\n\r\n### Examples\r\n\r\n* To run blather with the GTK UI and start in continuous listen mode:  \r\n`./Blather.py -i g -c`\r\n\r\n* To run blather with no UI and using a USB microphone recognized and device 2:  \r\n`./Blather.py -m 2`\r\n\r\n* To have blather pass the matched sentence to the executing command:  \r\n `./Blather.py -p`  \r\n\r\n \t**explanation:** if the commands.conf contains:  \r\n **good morning world : example_command.sh**   \r\n then 3 arguments, 'good', 'morning', and 'world' would get passed to example_command.sh as  \r\n `example_command.sh good morning world`\r\n\r\n* To run a command when a valid sentence has been detected:   \r\n\t`./Blather.py --valid-sentence-command=/path/to/command`  \r\n\t**note:** this can be set in the options.yml file\r\n* To run a command when a invalid sentence has been detected:   \r\n\t`./Blather.py --invalid-sentence-command=/path/to/command`  \r\n\t**note:** this can be set in the options.yml file\r\n\r\n### Finding the Device Number of a USB microphone\r\nThere are a few ways to find the device number of a USB microphone.\r\n\r\n* `cat /proc/asound/cards`\r\n* `arecord -l`\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}